#ifndef __J_LIB_H__
#define __J_LIB_H__

#include <asm/types.h>
#include <ctype.h>
#include <fcntl.h>
#include <limits.h>
#include <linux/watchdog.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <time.h>
#include <unistd.h>
#include "xini_file.h"

//----------------------------------------------------------------------------------------------------------
// 结构体定义，用于存储天数、小时和分钟
//----------------------------------------------------------------------------------------------------------
struct Time
{
    int days;
    int hours;
    int minutes;
};

//----------------------------------------------------------------------------------------------------------
// 定时器回调函数
//----------------------------------------------------------------------------------------------------------
typedef void (*TimerCallback)(int);

//----------------------------------------------------------------------------------------------------------
// 延迟函数
//----------------------------------------------------------------------------------------------------------
unsigned int crc_chk_value(unsigned char *data_value, unsigned char length);

//----------------------------------------------------------------------------------------------------------
// 微秒级延迟函数
//----------------------------------------------------------------------------------------------------------
void wait_us(long v_w_time);

//----------------------------------------------------------------------------------------------------------
// 延迟函数
//----------------------------------------------------------------------------------------------------------
void wait_ms(long v_ul_time);
//----------------------------------------------------------------------------------------------------------
// 数据交换 BA
//----------------------------------------------------------------------------------------------------------
void *ba(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 数据交换 ABDC
//----------------------------------------------------------------------------------------------------------
void *abdc(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 数据交换 BACD
//----------------------------------------------------------------------------------------------------------
void *bacd(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 数据交换 BADC
//----------------------------------------------------------------------------------------------------------
void *badc(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 数据交换 CDAB
//----------------------------------------------------------------------------------------------------------
void *cdab(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 数据交换 CDBA
//----------------------------------------------------------------------------------------------------------
void *cdba(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 数据交换 DCAB
//----------------------------------------------------------------------------------------------------------
void *dcab(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 数据交换 DCBA
//----------------------------------------------------------------------------------------------------------
void *dcba(void *buf, int len);

//----------------------------------------------------------------------------------------------------------
// 解析文件路径
//----------------------------------------------------------------------------------------------------------
void parse_file_path(char *path, char **filename);

//----------------------------------------------------------------------------------------------------------
// CO2验证数据位
//----------------------------------------------------------------------------------------------------------
unsigned short co2_check(unsigned char *data, int len);

//----------------------------------------------------------------------------------------------------------
// 时间格式化输出
//----------------------------------------------------------------------------------------------------------
void print_current_time(char *buf, size_t len);

//----------------------------------------------------------------------------------------------------------
// 定时器函数
//----------------------------------------------------------------------------------------------------------
int set_custom_timer_ms(int milliseconds, TimerCallback callback);

//----------------------------------------------------------------------------------------------------------
// 设置系统时间的函数
//----------------------------------------------------------------------------------------------------------
int set_system_time(time_t timestamp);

//----------------------------------------------------------------------------------------------------------
// 定时器函数，接受时间戳参数，返回Time结构体
//----------------------------------------------------------------------------------------------------------
struct Time timer(time_t timestamp);

//----------------------------------------------------------------------------------------------------------
// PID 过滤函数
//----------------------------------------------------------------------------------------------------------
int pid_filter(int pid, int *p, unsigned char num);
unsigned short get_sync_time(int pv, int sp, int p, int sycle, int rate);
#endif